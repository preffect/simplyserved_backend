services:
  postgres:
    build:
      context: ./backend/database
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: simplyserved
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  db-migrator:
    build:
      context: ./backend/db-migrator
    volumes:
      - ./backend/database/migrations:/app/migrations
    env_file:
      - ./backend/.env
    depends_on:
      postgres:
        condition: service_healthy
  postgraphile:
    build:
      context: ./backend/post-graphile
    ports:
      - "5000:5000"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/post-graphile/schema:/app/schema
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:5000/graphql"]
      interval: 10s
      timeout: 5s
      retries: 3
  postgrest:
    build:
      context: ./backend/postgrest
    ports:
      - "3000:3000"
    env_file:
      - ./backend/.env
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/"]
      interval: 10s
      timeout: 5s
      retries: 3
  token-exchange:
    build:
      context: ./backend/token-exchange
    ports:
      - "5001:5001"
    env_file:
      - ./backend/.env
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:5001/token-exchange"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres-data:
